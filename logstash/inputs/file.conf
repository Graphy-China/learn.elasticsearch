#=================================================
#
#  Input : file
#
#   @message => line
#   path     => filepath.
#
#
#================================================
input {

  file {
	  # commons
    add_field => {  # add additional key/values to event object.
		  "syu" => "good"
			"xyz" => "bad"
		
		}
    codec => "plain"
		type => "gcc" # The type is stored as part of the event itself, so you can also use the type to search for it in Kibana
		tags => ["Compile"]
		tags => "globe"

		# file configs.

		# [R]
		path => "/home/syu/temp/test/src/Globe7/*.test"
		# path => ["/var/log/messages", "/var/log/*.log" "./test/*"]
		# path => "/data/mysql/mysql.log"


		exclude => ["*.bak", "*.save"]
		exclude => "*.gz"


		# delimiter => " "

		discover_interval => 15  # 15 seconds: How often (in seconds) we expand globs to discover new files to watch.
		stat_interval => 1       # 1  seconds: How often (in seconds) we stat files to see if they have been modified.

		# sincedb_path: keep track of current position of monitored file.
		# sincedb_path => "/home/syu/temp/test/src/Globe7/x.test"
		# sincedb_write_interval => 15

		# beginning | end
		start_position => "end"

		
  }
}

filter {
			 # alter {
			 #   add_field => {}
			 # 	 add_tag   => []
			 # 	 remove_field => ["xyz"]
			 # 	 remove_tag   => []
			 # 	 periodic_flush => true


			 # 	 coalesce => []
			 # 	 condrewrite => []
			 # 	 condrewriteother => []

			 # }

			 checksum {
			   add_field => {}
				 add_tag   => []
				 remove_field => ["xyz"]
				 remove_tag   => []
				 # periodic_flush => true
			   
				 algorithm => "md5" # md5, sha, sha1, sha256, sha384
				 keys => "message" #"message", "@timestamp", "type"
				 
			 }
			 
			 csv {
			   add_field => {}
				 add_tag   => []
				 remove_field => ["xyz"]
				 remove_tag   => []
				 # periodic_flush => true

				 columns => ["key", "value"]
				 quote_char => "'"
				 separator => ":"
				 # source => "message"
				 target => "parsed_pairs"
			 }
}

output {
	 stdout {
	 	 codec => "rubydebug"
	 }
}
