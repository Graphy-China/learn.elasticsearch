input { 
			stdin { } 
}


filter {

  # json {
  #   source => "message"
  #   target => "doc"
  # }

  # grok {
  #   match => ["message", "%{MONTHDAY}/%{MONTHNUM}/%{YEAR:year}"]
  # }

  # grok {
  #   patterns_dir => "./patterns"
  #   match => ["message", "%{MYURI:uri}"]
  # }

  xml {
    source => "message"
    target => "xml_doc"
    add_field => {
      "anonymize" => "seangel.yu"
      "goody"     => "Sherry"
    }
  }
  
  anonymize {
    algorithm => "SHA256"
    fields => ["anonymize", "goody"]
    key => "123"
  }

  collate {
    count => 1
    interval => "2m"
    order => "descending"
    add_field => {"csv_data" => "10.20.30" }
  }

  csv {
    columns => ["x", "y", "z"]
    quote_char => "'"
    source => "csv_data"
    target => "csv"
    separator => "."
  }

  checksum {
    keys => ["x", "y", "z", "message"]
    add_field => {"create_date" => "2015-11-02 13:11:11"}
  }

  date {
    locale => "en"
    timezone => "America/Los_Angeles"
    match => ["create_date", "YYYY-MM-dd HH:mm:ss"]
    #tag_on_failure => ["_local_data_error"]
    target => "my_date"
  }

  environment {
    add_field_from_env => {"ruby_ver" => "RUBY_VERSION"}
  }
  # if [logger] == "TASK_START" {
  #     aggregate {
  #       task_id => "%{taskid}"
  #       code => "map['sql_duration'] = 0"
  #       map_action => "create"
  #     }
  # }

  #   if [logger] == "SQL" {
  #       aggregate {
  #         task_id => "%{taskid}"
  #         code => "map['sql_duration'] += event['duration']"
  #         map_action => "update"
  #       }
  #     }

  #     if [logger] == "TASK_END" {
  #         aggregate {
  #           task_id => "%{taskid}"
  #           code => "event['sql_duration'] = map['sql_duration']"
  #           map_action => "update"
  #        y   end_of_task => true
  #           timeout => 120
  #         }
  #       }
}

output {
			 stdout { codec => rubydebug }
}
